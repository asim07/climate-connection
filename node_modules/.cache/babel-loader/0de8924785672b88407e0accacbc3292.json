{"ast":null,"code":"var _jsxFileName = \"/Users/asim/Desktop/climate-connection/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { useWeb3React } from '@web3-react/core';\nimport { useState } from 'react';\nimport Web3 from 'web3';\nimport contractData from './constants/contract';\nimport selective from './constants/selective';\nimport sequential from './constants/sequential';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoinbaseWallet = new WalletLinkConnector({\n  url: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\n  appName: 'Web3-react Demo',\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\nconst WalletConnect = new WalletConnectConnector({\n  rpcUrl: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true\n});\nconst Injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42]\n});\n\nfunction App() {\n  _s();\n\n  const [CollectionName, setCollectionName] = useState('');\n  const [symbol, setSymbol] = useState('');\n  const [MintingCounter, setMinitngCounter] = useState('');\n  const [MintingPrice, setMintingPrice] = useState('');\n  const [MetadataURI, setMetadataURI] = useState('');\n  const [address, setAddress] = useState('');\n  const [mintingAddress, setMintingAddress] = useState('');\n  const [nftId, setNftid] = useState('');\n\n  const deploySequential = async () => {\n    const provider = await Injected.activate();\n    const web3 = new Web3(provider.provider);\n    const contract = new web3.eth.Contract(contractData.abi, contractData.contractAddress);\n    const address = await web3.eth.getAccounts();\n    const tx = {\n      to: contractData.contractAddress,\n      from: address[0]\n    };\n    let gasfee = await contract.methods.deploySequential(CollectionName, symbol, MetadataURI, MintingCounter, MintingPrice).estimateGas(tx);\n    console.log(gasfee);\n    tx.gas = web3.utils.toHex(gasfee);\n    const transaction = await contract.methods.deploySequential(CollectionName, symbol, MetadataURI, MintingCounter, MintingPrice).send(tx);\n    const newContractAddress = transaction.events[0].address;\n\n    if (typeof newContractAddress !== undefined) {\n      setAddress(newContractAddress);\n    } else {\n      setAddress(\"transaction failed\");\n    }\n  };\n\n  const deploySelective = async () => {\n    console.log(\"first Working\");\n    const provider = await Injected.activate(); // console.log(provider.provider);\n\n    const web3 = new Web3(provider.provider);\n    const contract = new web3.eth.Contract(contractData.abi, contractData.contractAddress);\n    const address = await web3.eth.getAccounts();\n    const tx = {\n      to: contractData.contractAddress,\n      from: address[0]\n    };\n    let gasfee = await contract.methods.deploySelective(CollectionName, symbol, MetadataURI, MintingCounter, MintingPrice).estimateGas(tx);\n    console.log(gasfee);\n    tx.gas = web3.utils.toHex(gasfee);\n    const transaction = await contract.methods.deploySelective(CollectionName, symbol, MetadataURI, MintingCounter, MintingPrice).send(tx);\n    const newContractAddress = transaction.events[0].address;\n\n    if (typeof newContractAddress !== undefined) {\n      setAddress(newContractAddress);\n    } else {\n      setAddress(\"transaction failed\");\n    }\n  };\n\n  const mintSequentialNFt = async () => {\n    const provider = await Injected.activate(); // console.log(provider.provider);\n\n    const web3 = new Web3(provider.provider);\n    const contract = new web3.eth.Contract(sequential.abi, mintingAddress);\n    const address = await web3.eth.getAccounts();\n    let price = await contract.methods.mintPrice.call().call(); // price = web3.utils.fromWei(`${price}`,'ether');\n\n    console.log(\"working : \", price);\n    const tx = {\n      to: mintingAddress,\n      from: address[0],\n      value: price\n    };\n    let gasfee = await contract.methods.safeMint(address[0]).estimateGas(tx);\n    tx.gas = web3.utils.toHex(gasfee);\n    const mint = await contract.methods.safeMint(address[0]).send(tx);\n    const data = mint.events.Transfer.returnValues.tokenId;\n    console.log(mint);\n    console.log(\"Minted Id is \", data);\n    setNftid(`Minted Token : ${data}`);\n  };\n\n  const SelectiveMint = async () => {\n    const provider = await Injected.activate(); // console.log(provider.provider);\n\n    const web3 = new Web3(provider.provider);\n    const contract = new web3.eth.Contract(selective.abi, mintingAddress);\n    const address = await web3.eth.getAccounts();\n    let price = await contract.methods.mintPrice.call().call(); // price = web3.utils.fromWei(`${price}`,'ether');\n\n    console.log(\"working : \", price);\n    const tx = {\n      to: mintingAddress,\n      from: address[0],\n      value: price\n    };\n    let gasfee = await contract.methods.safeMint(address[0], nftId).estimateGas(tx);\n    tx.gas = web3.utils.toHex(gasfee);\n    const mint = await contract.methods.safeMint(address[0], nftId).send(tx);\n    const data = mint.events.Transfer.returnValues.tokenId;\n    console.log(mint);\n    console.log(\"Minted Id is \", data);\n    setNftid(`Minted Token : ${data}`);\n  };\n\n  const {\n    active,\n    chainId,\n    account\n  } = useWeb3React();\n  console.log(\"active : \", active, \"chainID : \", chainId, \"Account : \", account);\n  const {\n    activate,\n    deactivate\n  } = useWeb3React();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        activate(CoinbaseWallet);\n      },\n      children: \"Coinbase Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        activate(WalletConnect);\n      },\n      children: \"Wallet Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        activate(Injected);\n      },\n      children: \"Metamask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deactivate,\n      children: \"Disconnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Connection Status: ${active}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Account: ${account}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Network ID: ${chainId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"display\": \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Collection Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              onChange: event => setCollectionName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Collection symbol\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"symbol\",\n              onChange: event => setSymbol(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Minting count\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"mintingCount\",\n              onChange: event => setMinitngCounter(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Minting Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"price\",\n              onChange: event => setMintingPrice(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Metadata URI\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"metadata\",\n              onChange: event => setMetadataURI(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"display\": \"flex\",\n          \"padding\": \"10px\",\n          \"paddingLeft\": \"116px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deploySequential,\n          children: \"deploy Contract Sequential\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deploySequential,\n          children: \"deploy Contract random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deploySelective,\n          children: \"deploy Contract Selective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Deployed Contract Address :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"display\": \"flex\",\n        \"marginTop\": \"100px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Contract Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            onChange: event => setMintingAddress(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mintSequentialNFt,\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"display\": \"flex\",\n        \"marginTop\": \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://testnets.opensea.io/assets/${mintingAddress}/${nftId}`,\n        children: [\"view \", nftId, \" of contract \", mintingAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IS+UM78ttD0LbUAVO4gceHlPgA8=\", false, function () {\n  return [useWeb3React, useWeb3React];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WalletLinkConnector","WalletConnectConnector","InjectedConnector","useWeb3React","useState","Web3","contractData","selective","sequential","CoinbaseWallet","url","process","env","INFURA_KEY","appName","supportedChainIds","WalletConnect","rpcUrl","bridge","qrcode","Injected","App","CollectionName","setCollectionName","symbol","setSymbol","MintingCounter","setMinitngCounter","MintingPrice","setMintingPrice","MetadataURI","setMetadataURI","address","setAddress","mintingAddress","setMintingAddress","nftId","setNftid","deploySequential","provider","activate","web3","contract","eth","Contract","abi","contractAddress","getAccounts","tx","to","from","gasfee","methods","estimateGas","console","log","gas","utils","toHex","transaction","send","newContractAddress","events","undefined","deploySelective","mintSequentialNFt","price","mintPrice","call","value","safeMint","mint","data","Transfer","returnValues","tokenId","SelectiveMint","active","chainId","account","deactivate","event","target"],"sources":["/Users/asim/Desktop/climate-connection/src/App.js"],"sourcesContent":["import './App.css'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { useWeb3React } from '@web3-react/core'\nimport { useState } from 'react'\nimport Web3 from 'web3'\nimport contractData from'./constants/contract';\nimport selective from './constants/selective';\nimport sequential from './constants/sequential';\n\n\nconst CoinbaseWallet = new WalletLinkConnector({\n  url: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\n  appName: 'Web3-react Demo',\n  supportedChainIds: [1, 3, 4, 5, 42]\n})\n\n\nconst WalletConnect = new WalletConnectConnector({\n  rpcUrl: `https://mainnet.infura.io/v3/${process.env.INFURA_KEY}`,\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true\n})\n\n\nconst Injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42]\n})\nfunction App () {\n\nconst [CollectionName, setCollectionName] = useState('');\nconst [symbol, setSymbol] = useState('');\nconst [MintingCounter, setMinitngCounter] = useState('');\nconst [MintingPrice, setMintingPrice] = useState('');\nconst [MetadataURI, setMetadataURI] = useState('');\nconst [address,setAddress] = useState('');\nconst [mintingAddress,setMintingAddress] = useState('');\nconst [nftId,setNftid] = useState('');\n\n \n  \n  const deploySequential = async ()=>{\n    \n    const provider = await  Injected.activate();\n    const web3 = new Web3(provider.provider);\n    const contract = new web3.eth.Contract(contractData.abi,contractData.contractAddress)\n    const address = await web3.eth.getAccounts();\n  \n    const tx = {\n      to : contractData.contractAddress,\n      from : address[0],\n    }\n    let gasfee = await contract.methods.deploySequential(CollectionName,symbol,MetadataURI,MintingCounter,MintingPrice).estimateGas(tx);\n  console.log(gasfee);\n    tx.gas = web3.utils.toHex(gasfee)\n  \n    const transaction = await  contract.methods.deploySequential(CollectionName,symbol,MetadataURI,MintingCounter,MintingPrice).send(tx);\n    const newContractAddress = transaction.events[0].address; \n    if(typeof newContractAddress !== undefined){\n      setAddress(newContractAddress);\n    }else {\n      setAddress(\"transaction failed\");\n\n    }  }\n\n\n    const deploySelective = async ()=>{\n    console.log(\"first Working\")\n      const provider = await  Injected.activate();\n      // console.log(provider.provider);\n      const web3 = new Web3(provider.provider);\n      const contract = new web3.eth.Contract(contractData.abi,contractData.contractAddress)\n      const address = await web3.eth.getAccounts();\n    \n      const tx = {\n        to : contractData.contractAddress,\n        from : address[0],\n      }\n      let gasfee = await contract.methods.deploySelective(CollectionName,symbol,MetadataURI,MintingCounter,MintingPrice).estimateGas(tx);\n    console.log(gasfee);\n      tx.gas = web3.utils.toHex(gasfee)\n    \n      const transaction = await  contract.methods.deploySelective(CollectionName,symbol,MetadataURI,MintingCounter,MintingPrice).send(tx);\n      const newContractAddress = transaction.events[0].address; \n      if(typeof newContractAddress !== undefined){\n        setAddress(newContractAddress);\n      }else {\n        setAddress(\"transaction failed\");\n  \n      }  }\n\n\n  const mintSequentialNFt = async ()=>{\n    const provider = await  Injected.activate();\n    // console.log(provider.provider);\n    const web3 = new Web3(provider.provider);\n    const contract = new web3.eth.Contract(sequential.abi,mintingAddress)\n    const address = await web3.eth.getAccounts();\n    let price = await contract.methods.mintPrice.call().call();\n    // price = web3.utils.fromWei(`${price}`,'ether');\n    console.log(\"working : \",price);\n    const tx = {\n      to : mintingAddress,\n      from : address[0],\n      value : price\n    }\n    let gasfee = await contract.methods.safeMint(address[0]).estimateGas(tx);\n    tx.gas = web3.utils.toHex(gasfee);\n    const mint = await contract.methods.safeMint(address[0]).send(tx);\n    const data = mint.events.Transfer.returnValues.tokenId;\n    console.log(mint)\n    console.log(\"Minted Id is \",data);\n    setNftid(`Minted Token : ${data}`);\n\n\n\n  }\n  const SelectiveMint = async ()=>{\n    const provider = await  Injected.activate();\n    // console.log(provider.provider);\n    const web3 = new Web3(provider.provider);\n    const contract = new web3.eth.Contract(selective.abi,mintingAddress)\n    const address = await web3.eth.getAccounts();\n    let price = await contract.methods.mintPrice.call().call();\n    // price = web3.utils.fromWei(`${price}`,'ether');\n    console.log(\"working : \",price);\n    const tx = {\n      to : mintingAddress,\n      from : address[0],\n      value : price\n    }\n    let gasfee = await contract.methods.safeMint(address[0],nftId).estimateGas(tx);\n    tx.gas = web3.utils.toHex(gasfee);\n    const mint = await contract.methods.safeMint(address[0],nftId).send(tx);\n    const data = mint.events.Transfer.returnValues.tokenId;\n    console.log(mint)\n    console.log(\"Minted Id is \",data);\n    setNftid(`Minted Token : ${data}`);\n\n\n\n  }\n  const { active, chainId, account} = useWeb3React()\n\n\n  console.log(\"active : \", active,\"chainID : \",chainId,\"Account : \",account);\n\n  const { activate, deactivate } = useWeb3React()\n\n\n  \n\n  return (\n\n    \n    <div className='App'>\n\n      <button\n        onClick={() => {\n          activate(CoinbaseWallet)\n        }}\n      >\n        Coinbase Wallet\n      </button>\n      <button\n        onClick={() => {\n          activate(WalletConnect)\n        }}\n      >\n        Wallet Connect\n      </button>\n      <button\n        onClick={() => {\n          activate(Injected)\n        }}\n      >\n        Metamask\n      </button>\n      <button onClick={deactivate}>Disconnect</button>\n      <div>{`Connection Status: ${active}`}</div>\n      <div>{`Account: ${account}`}</div>\n      <div>{`Network ID: ${chainId}`}</div>\n<div><div style={{\"display\": \"flex\"\n    }} ><form>\n    <label>\n      Collection Name\n      <input type=\"text\"  name=\"name\" onChange={event => setCollectionName(event.target.value)} />\n    </label><br></br>\n    <label>\n      Collection symbol \n      <input type=\"text\" name=\"symbol\" onChange={event => setSymbol(event.target.value)} />\n    </label><br></br>\n    <label>\n      Minting count\n      <input type=\"text\" name=\"mintingCount\" onChange={event => setMinitngCounter(event.target.value)}/>\n    </label><br></br>\n    <label>\n      Minting Price \n      <input type=\"text\" name=\"price\" onChange={event => setMintingPrice(event.target.value)}/>\n    </label><br></br>\n    <label>\n      Metadata URI \n      <input type=\"text\" name=\"metadata\" onChange={event => setMetadataURI(event.target.value)}/>\n    </label><br></br>\n  </form>\n  </div>\n  <div style={{\"display\": \"flex\",\"padding\":\"10px\",\"paddingLeft\":\"116px\"}}><form></form>\n  <button onClick={deploySequential}>deploy Contract Sequential</button>\n  <button onClick={deploySequential}>deploy Contract random</button>\n  <button onClick={deploySelective}>deploy Contract Selective</button>\n  </div>\n\n  </div>    \n  <div>\n    <h4>Deployed Contract Address :</h4> <h2>{address}</h2>\n  </div>\n  <div style={{\"display\": \"flex\",\"marginTop\":\"100px\"}}>\n    <form>\n    <label>\n      Contract Address \n      <input type=\"text\" name=\"name\" onChange={event => setMintingAddress(event.target.value)} />\n    </label>\n    </form>\n    <button onClick={mintSequentialNFt}>Mint</button>\n</div >\n\n    <div style={{\"display\": \"flex\",\"marginTop\":\"100px\"}}>\n    <a href={`https://testnets.opensea.io/assets/${mintingAddress}/${nftId}`}>view {nftId} of contract {mintingAddress}</a>\n\n    </div>\n  </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
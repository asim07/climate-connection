{"ast":null,"code":"import EventEmitter from \"eventemitter3\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport { IJsonRpcConnection } from \"@walletconnect/jsonrpc-types\";\nimport { formatJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nexport class SignerConnection extends IJsonRpcConnection {\n  constructor(opts) {\n    super();\n    this.events = new EventEmitter();\n    this.accounts = [];\n    this.chainId = 1;\n    this.pending = false;\n    this.bridge = \"https://bridge.walletconnect.org\";\n    this.qrcode = true;\n    this.qrcodeModalOptions = undefined;\n    this.opts = opts;\n    this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n    this.wc = this.register(opts);\n  }\n\n  get connected() {\n    return typeof this.wc !== \"undefined\" && this.wc.connected;\n  }\n\n  get connecting() {\n    return this.pending;\n  }\n\n  get connector() {\n    this.wc = this.register(this.opts);\n    return this.wc;\n  }\n\n  on(event, listener) {\n    this.events.on(event, listener);\n  }\n\n  once(event, listener) {\n    this.events.once(event, listener);\n  }\n\n  off(event, listener) {\n    this.events.off(event, listener);\n  }\n\n  removeListener(event, listener) {\n    this.events.removeListener(event, listener);\n  }\n\n  async open(chainId) {\n    if (this.connected) {\n      this.onOpen();\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      this.on(\"error\", err => {\n        reject(err);\n      });\n      this.on(\"open\", () => {\n        resolve();\n      });\n      this.create(chainId);\n    });\n  }\n\n  async close() {\n    if (typeof this.wc === \"undefined\") return;\n\n    if (this.wc.connected) {\n      this.wc.killSession();\n    }\n\n    this.onClose();\n  }\n\n  async send(payload) {\n    this.wc = this.register(this.opts);\n    if (!this.connected) await this.open();\n    this.sendPayload(payload).then(res => this.events.emit(\"payload\", res)).catch(e => this.events.emit(\"payload\", formatJsonRpcError(payload.id, e.message)));\n  }\n\n  register(opts) {\n    if (this.wc) return this.wc;\n    this.opts = opts || this.opts;\n    this.bridge = (opts === null || opts === void 0 ? void 0 : opts.connector) ? opts.connector.bridge : (opts === null || opts === void 0 ? void 0 : opts.bridge) || \"https://bridge.walletconnect.org\";\n    this.qrcode = typeof (opts === null || opts === void 0 ? void 0 : opts.qrcode) === \"undefined\" || opts.qrcode !== false;\n    this.chainId = typeof (opts === null || opts === void 0 ? void 0 : opts.chainId) !== \"undefined\" ? opts.chainId : this.chainId;\n    this.qrcodeModalOptions = opts === null || opts === void 0 ? void 0 : opts.qrcodeModalOptions;\n    const connectorOpts = {\n      bridge: this.bridge,\n      qrcodeModal: this.qrcode ? QRCodeModal : undefined,\n      qrcodeModalOptions: this.qrcodeModalOptions,\n      storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n      signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n      clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta\n    };\n    this.wc = typeof (opts === null || opts === void 0 ? void 0 : opts.connector) !== \"undefined\" ? opts.connector : new WalletConnect(connectorOpts);\n\n    if (typeof this.wc === \"undefined\") {\n      throw new Error(\"Failed to register WalletConnect connector\");\n    }\n\n    if (this.wc.accounts.length) {\n      this.accounts = this.wc.accounts;\n    }\n\n    if (this.wc.chainId) {\n      this.chainId = this.wc.chainId;\n    }\n\n    this.registerConnectorEvents();\n    return this.wc;\n  }\n\n  onOpen(wc) {\n    this.pending = false;\n\n    if (wc) {\n      this.wc = wc;\n    }\n\n    this.events.emit(\"open\");\n  }\n\n  onClose() {\n    this.pending = false;\n\n    if (this.wc) {\n      this.wc = undefined;\n    }\n\n    this.events.emit(\"close\");\n  }\n\n  onError(payload) {\n    let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Failed or Rejected Request\";\n    let code = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -32000;\n    const errorPayload = {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      error: {\n        code,\n        message\n      }\n    };\n    this.events.emit(\"payload\", errorPayload);\n    return errorPayload;\n  }\n\n  create(chainId) {\n    this.wc = this.register(this.opts);\n    this.chainId = chainId || this.chainId;\n    if (this.connected || this.pending) return;\n    this.pending = true;\n    this.registerConnectorEvents();\n    this.wc.createSession({\n      chainId: this.chainId\n    }).then(() => this.events.emit(\"created\")).catch(e => this.events.emit(\"error\", e));\n  }\n\n  registerConnectorEvents() {\n    this.wc = this.register(this.opts);\n    this.wc.on(\"connect\", err => {\n      var _a, _b;\n\n      if (err) {\n        this.events.emit(\"error\", err);\n        return;\n      }\n\n      this.accounts = ((_a = this.wc) === null || _a === void 0 ? void 0 : _a.accounts) || [];\n      this.chainId = ((_b = this.wc) === null || _b === void 0 ? void 0 : _b.chainId) || this.chainId;\n      this.onOpen();\n    });\n    this.wc.on(\"disconnect\", err => {\n      if (err) {\n        this.events.emit(\"error\", err);\n        return;\n      }\n\n      this.onClose();\n    });\n    this.wc.on(\"modal_closed\", () => {\n      this.events.emit(\"error\", new Error(\"User closed modal\"));\n    });\n    this.wc.on(\"session_update\", (error, payload) => {\n      const {\n        accounts,\n        chainId\n      } = payload.params[0];\n\n      if (!this.accounts || accounts && this.accounts !== accounts) {\n        this.accounts = accounts;\n        this.events.emit(\"accountsChanged\", accounts);\n      }\n\n      if (!this.chainId || chainId && this.chainId !== chainId) {\n        this.chainId = chainId;\n        this.events.emit(\"chainChanged\", chainId);\n      }\n    });\n  }\n\n  async sendPayload(payload) {\n    this.wc = this.register(this.opts);\n\n    try {\n      const response = await this.wc.unsafeSend(payload);\n      return this.sanitizeResponse(response);\n    } catch (error) {\n      return this.onError(payload, error.message);\n    }\n  }\n\n  sanitizeResponse(response) {\n    return typeof response.error !== \"undefined\" && typeof response.error.code === \"undefined\" ? formatJsonRpcError(response.id, response.error.message) : response;\n  }\n\n}\nexport default SignerConnection;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import EventEmitter from \"eventemitter3\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport { IJsonRpcConnection } from \"@walletconnect/jsonrpc-types\";\nimport { formatJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nexport class SignerConnection extends IJsonRpcConnection {\n    constructor(opts) {\n        super();\n        this.events = new EventEmitter();\n        this.accounts = [];\n        this.chainId = 1;\n        this.pending = false;\n        this.bridge = \"https://bridge.walletconnect.org\";\n        this.qrcode = true;\n        this.qrcodeModalOptions = undefined;\n        this.opts = opts;\n        this.chainId = (opts === null || opts === void 0 ? void 0 : opts.chainId) || this.chainId;\n        this.wc = this.register(opts);\n    }\n    get connected() {\n        return typeof this.wc !== \"undefined\" && this.wc.connected;\n    }\n    get connecting() {\n        return this.pending;\n    }\n    get connector() {\n        this.wc = this.register(this.opts);\n        return this.wc;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async open(chainId) {\n        if (this.connected) {\n            this.onOpen();\n            return;\n        }\n        return new Promise((resolve, reject) => {\n            this.on(\"error\", err => {\n                reject(err);\n            });\n            this.on(\"open\", () => {\n                resolve();\n            });\n            this.create(chainId);\n        });\n    }\n    async close() {\n        if (typeof this.wc === \"undefined\")\n            return;\n        if (this.wc.connected) {\n            this.wc.killSession();\n        }\n        this.onClose();\n    }\n    async send(payload) {\n        this.wc = this.register(this.opts);\n        if (!this.connected)\n            await this.open();\n        this.sendPayload(payload)\n            .then((res) => this.events.emit(\"payload\", res))\n            .catch(e => this.events.emit(\"payload\", formatJsonRpcError(payload.id, e.message)));\n    }\n    register(opts) {\n        if (this.wc)\n            return this.wc;\n        this.opts = opts || this.opts;\n        this.bridge = (opts === null || opts === void 0 ? void 0 : opts.connector)\n            ? opts.connector.bridge\n            : (opts === null || opts === void 0 ? void 0 : opts.bridge) || \"https://bridge.walletconnect.org\";\n        this.qrcode = typeof (opts === null || opts === void 0 ? void 0 : opts.qrcode) === \"undefined\" || opts.qrcode !== false;\n        this.chainId = typeof (opts === null || opts === void 0 ? void 0 : opts.chainId) !== \"undefined\" ? opts.chainId : this.chainId;\n        this.qrcodeModalOptions = opts === null || opts === void 0 ? void 0 : opts.qrcodeModalOptions;\n        const connectorOpts = {\n            bridge: this.bridge,\n            qrcodeModal: this.qrcode ? QRCodeModal : undefined,\n            qrcodeModalOptions: this.qrcodeModalOptions,\n            storageId: opts === null || opts === void 0 ? void 0 : opts.storageId,\n            signingMethods: opts === null || opts === void 0 ? void 0 : opts.signingMethods,\n            clientMeta: opts === null || opts === void 0 ? void 0 : opts.clientMeta,\n        };\n        this.wc =\n            typeof (opts === null || opts === void 0 ? void 0 : opts.connector) !== \"undefined\" ? opts.connector : new WalletConnect(connectorOpts);\n        if (typeof this.wc === \"undefined\") {\n            throw new Error(\"Failed to register WalletConnect connector\");\n        }\n        if (this.wc.accounts.length) {\n            this.accounts = this.wc.accounts;\n        }\n        if (this.wc.chainId) {\n            this.chainId = this.wc.chainId;\n        }\n        this.registerConnectorEvents();\n        return this.wc;\n    }\n    onOpen(wc) {\n        this.pending = false;\n        if (wc) {\n            this.wc = wc;\n        }\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.pending = false;\n        if (this.wc) {\n            this.wc = undefined;\n        }\n        this.events.emit(\"close\");\n    }\n    onError(payload, message = \"Failed or Rejected Request\", code = -32000) {\n        const errorPayload = {\n            id: payload.id,\n            jsonrpc: payload.jsonrpc,\n            error: { code, message },\n        };\n        this.events.emit(\"payload\", errorPayload);\n        return errorPayload;\n    }\n    create(chainId) {\n        this.wc = this.register(this.opts);\n        this.chainId = chainId || this.chainId;\n        if (this.connected || this.pending)\n            return;\n        this.pending = true;\n        this.registerConnectorEvents();\n        this.wc\n            .createSession({ chainId: this.chainId })\n            .then(() => this.events.emit(\"created\"))\n            .catch((e) => this.events.emit(\"error\", e));\n    }\n    registerConnectorEvents() {\n        this.wc = this.register(this.opts);\n        this.wc.on(\"connect\", (err) => {\n            var _a, _b;\n            if (err) {\n                this.events.emit(\"error\", err);\n                return;\n            }\n            this.accounts = ((_a = this.wc) === null || _a === void 0 ? void 0 : _a.accounts) || [];\n            this.chainId = ((_b = this.wc) === null || _b === void 0 ? void 0 : _b.chainId) || this.chainId;\n            this.onOpen();\n        });\n        this.wc.on(\"disconnect\", (err) => {\n            if (err) {\n                this.events.emit(\"error\", err);\n                return;\n            }\n            this.onClose();\n        });\n        this.wc.on(\"modal_closed\", () => {\n            this.events.emit(\"error\", new Error(\"User closed modal\"));\n        });\n        this.wc.on(\"session_update\", (error, payload) => {\n            const { accounts, chainId } = payload.params[0];\n            if (!this.accounts || (accounts && this.accounts !== accounts)) {\n                this.accounts = accounts;\n                this.events.emit(\"accountsChanged\", accounts);\n            }\n            if (!this.chainId || (chainId && this.chainId !== chainId)) {\n                this.chainId = chainId;\n                this.events.emit(\"chainChanged\", chainId);\n            }\n        });\n    }\n    async sendPayload(payload) {\n        this.wc = this.register(this.opts);\n        try {\n            const response = await this.wc.unsafeSend(payload);\n            return this.sanitizeResponse(response);\n        }\n        catch (error) {\n            return this.onError(payload, error.message);\n        }\n    }\n    sanitizeResponse(response) {\n        return typeof response.error !== \"undefined\" &&\n            typeof response.error.code === \"undefined\"\n            ? formatJsonRpcError(response.id, response.error.message)\n            : response;\n    }\n}\nexport default SignerConnection;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}